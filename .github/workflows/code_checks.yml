name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: master

jobs:
  go_checks:
    name: GO Checks
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v1

    - name: Set Up Go
      uses: actions/setup-go@v2
      with:
        stable: 'false'
        go-version: '1.15.3'

    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install packages
      run: |
        go get -u golang.org/x/lint/golint
        go get -u golang.org/x/tools/cmd/goimports
        go get -u github.com/segmentio/golines
    
    - name: Check formatting
      run: |
        if [[ $(golines . -l) ]]; then
          echo "Golines would reformat the following files"
          golines . -l
          exit 1
        else
          echo "All files are properly formatted"
        fi

    - name: Run linter
      run: |
        go vet .
        golint .

    - name: Run tests
      run: go test ./... -v

    - name: Setup Minikube
      uses: manusa/actions-setup-minikube@v2.3.0
      with:
        minikube version: 'v1.15.1'
        kubernetes version: 'v1.19.0'
        driver: docker

    - name: Integration test
      run: go run internal/integration/run_integrations.go
  js_checks:
    runs-on: ubuntu-latest
    name: JS Checks
    defaults:
      run:
        working-directory: ui
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install modules
        run: yarn --frozen-lockfile
      - name: Run ESLint
        run: eslint --ext .tsx
      - name: Check formatting
        run: prettier --check
